// <auto-generated />
using System;
using FlightBookingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightBookingAPI.Migrations
{
    [DbContext(typeof(DbContextClass))]
    partial class DbContextClassModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Airline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("iata")
                        .HasColumnType("longtext");

                    b.Property<string>("icao")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("airport_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city_iata_code")
                        .HasColumnType("longtext");

                    b.Property<string>("country_iso2")
                        .HasColumnType("longtext");

                    b.Property<string>("country_name")
                        .HasColumnType("longtext");

                    b.Property<string>("geoname_id")
                        .HasColumnType("longtext");

                    b.Property<string>("gmt")
                        .HasColumnType("longtext");

                    b.Property<string>("iata_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("icao_code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("latitude")
                        .HasColumnType("longtext");

                    b.Property<string>("longitude")
                        .HasColumnType("longtext");

                    b.Property<string>("phone_number")
                        .HasColumnType("longtext");

                    b.Property<string>("timezone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Arrival", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("actual")
                        .HasColumnType("longtext");

                    b.Property<string>("actual_runway")
                        .HasColumnType("longtext");

                    b.Property<string>("airport")
                        .HasColumnType("longtext");

                    b.Property<string>("baggage")
                        .HasColumnType("longtext");

                    b.Property<int?>("delay")
                        .HasColumnType("int");

                    b.Property<DateTime>("estimated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("estimated_runway")
                        .HasColumnType("longtext");

                    b.Property<string>("gate")
                        .HasColumnType("longtext");

                    b.Property<string>("iata")
                        .HasColumnType("longtext");

                    b.Property<string>("icao")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("scheduled")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("terminal")
                        .HasColumnType("longtext");

                    b.Property<string>("timezone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Arrivals");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.CodeShared", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("airline_iata")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("airline_icao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("airline_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("flight_iata")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("flight_icao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("flight_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CodeShareds");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Departure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("actual")
                        .HasColumnType("longtext");

                    b.Property<string>("actual_runway")
                        .HasColumnType("longtext");

                    b.Property<string>("airport")
                        .HasColumnType("longtext");

                    b.Property<int?>("delay")
                        .HasColumnType("int");

                    b.Property<DateTime>("estimated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("estimated_runway")
                        .HasColumnType("longtext");

                    b.Property<string>("gate")
                        .HasColumnType("longtext");

                    b.Property<string>("iata")
                        .HasColumnType("longtext");

                    b.Property<string>("icao")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("scheduled")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("terminal")
                        .HasColumnType("longtext");

                    b.Property<string>("timezone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CodeSharedId")
                        .HasColumnType("char(36)");

                    b.Property<string>("iata")
                        .HasColumnType("longtext");

                    b.Property<string>("icao")
                        .HasColumnType("longtext");

                    b.Property<string>("number")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CodeSharedId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.FlightDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AirlineId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ArrivalId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DepartureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FlightId")
                        .HasColumnType("char(36)");

                    b.Property<string>("aircraft")
                        .HasColumnType("longtext");

                    b.Property<string>("flight_date")
                        .HasColumnType("longtext");

                    b.Property<string>("flight_status")
                        .HasColumnType("longtext");

                    b.Property<string>("live")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.HasIndex("ArrivalId");

                    b.HasIndex("DepartureId");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightDetails");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Flight", b =>
                {
                    b.HasOne("FlightBookingAPI.Domain.Models.DataSets.CodeShared", null)
                        .WithMany("Flights")
                        .HasForeignKey("CodeSharedId");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.FlightDetails", b =>
                {
                    b.HasOne("FlightBookingAPI.Domain.Models.DataSets.Airline", null)
                        .WithMany("FlightDetails")
                        .HasForeignKey("AirlineId");

                    b.HasOne("FlightBookingAPI.Domain.Models.DataSets.Arrival", null)
                        .WithMany("FlightDetails")
                        .HasForeignKey("ArrivalId");

                    b.HasOne("FlightBookingAPI.Domain.Models.DataSets.Departure", null)
                        .WithMany("FlightDetails")
                        .HasForeignKey("DepartureId");

                    b.HasOne("FlightBookingAPI.Domain.Models.DataSets.Flight", null)
                        .WithMany("FlightDetails")
                        .HasForeignKey("FlightId");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Airline", b =>
                {
                    b.Navigation("FlightDetails");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Arrival", b =>
                {
                    b.Navigation("FlightDetails");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.CodeShared", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Departure", b =>
                {
                    b.Navigation("FlightDetails");
                });

            modelBuilder.Entity("FlightBookingAPI.Domain.Models.DataSets.Flight", b =>
                {
                    b.Navigation("FlightDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
